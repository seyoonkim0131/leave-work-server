type Schedule {
  id: Int!
  userId: User!
  date: String!
  startTime: String
  endTime: String
  overTime: String
  break: String!
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

type Query {
  GetMyProfile: GetMyProfileResponse!
  user: User!
}

type User {
  id: Int!
  email: String!
  name: String!
  startH: String
  startM: String
  endH: String
  endM: String
  salary: String
  password: String!
  createdAt: String!
  updatedAt: String
}

type SignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  SignIn(email: String!, password: String!): SignInResponse!
  SignUp(email: String!, name: String!, password: String!, startH: String, startM: String, endH: String, endM: String, salary: String): SignUpResponse!
  UpdateMyProfile(name: String, startH: String, startM: String, endH: String, endM: String, salary: String, password: String): UpdateMyProfileResponse!
}

type SignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type UpdateMyProfileResponse {
  ok: Boolean!
  error: String
}
